adorn_ns()
msleep %>%
tabyl(order, vore) %>%
adorn_pct_formatting(digits=1) %>%
adorn_ns()
msleep %>%
tabyl(order, vore) %>%
adorn_percentages() %>%
adorn_ns()
msleep %>%
tabyl(order, vore)
msleep %>%
tabyl(order, vore) %>%
adorn_percentages("row") %>%
adorn_pct_formatting(digits = 2) %>%
adorn_ns()
msleep %>%
tabyl(order, vore) %>%
adorn_percentages("row") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns()
msleep
msleep %>%
tabyl(vore, order, conservation, show_missing_levels = FALSE) %>%
adorn_totals("row") %>%
adorn_percentages("all") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns %>%
adorn_title
msleep %>%
tabyl(vore, order, show_missing_levels = FALSE) %>%
adorn_totals("row") %>%
adorn_percentages("all") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns %>%
adorn_title
msleep %>%
tabyl(vore, order, show_missing_levels = FALSE) %>%
adorn_totals("row") %>%
adorn_percentages("all") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns
msleep %>%
tabyl(vore, order, show_missing_levels = FALSE) %>%
adorn_totals("row") %>%
adorn_percentages("all") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns %>%
adorn_title
msleep %>%
tabyl(conseervation, order, vore, show_missing_levels = FALSE) %>%
adorn_totals("row") %>%
adorn_percentages("all") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns %>%
adorn_title
msleep %>%
tabyl(conservation, order, vore, show_missing_levels = FALSE) %>%
adorn_totals("row") %>%
adorn_percentages("all") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns %>%
adorn_title
msleep %>%
add_count(vore)
msleep %>%
group_by(order) %>%
summarize(mean_brainwt = mean(brainwt))
msleep %>%
group_by(order) %>%
summarize(mean_brainwt = mean(brainwt, na.rm = TRUE))
msleep %>%
filter(order == "Cetacea")
msleep %>%
group_by(order) %>%
filter(!is.na(brainwt)) %>%
summarize(mean_brainwt = mean(brainwt))
msleep %>%
group_by(order) %>%
summarize(mean_brainwt = mean(brainwt, na.rm = TRUE))
penguins
penguins %>%
summarise(distinct_species = n_distinct(species),
distinct_island = n_distinct(island),
distinct_sex = n_distinct(sex))
penguins %>%
summarise(across(c(species, island, sex),
n_distinct))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
penguins %>%
summarise(across(c(species, island, sex),
n_distinct))
library("tidyverse")
library("tidyverse")
library("janitor")
#install.packages("skimr")
library("skimr")
install.packages("skimr")
library("skimr")
?msleep
names(msleep)
remotes::install_github("allisonhorst/palmerpenguins")
msleep24 <- select(msleep, name, vore, sleep_total_24)
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T)
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
msleep24 <- select(msleep, name, vore, sleep_total_24) %>%
filter(msleep24, sleep_total_24 < 0.3) %>%
arrange(desc(msleep24))
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
msleep24 <- select(msleep, name, vore, sleep_total_24) %>%
filter(msleep24, sleep_total_24 < 0.3)
rlang::last_error()
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T)
# msleep24 <- select(msleep, name, vore, sleep_total_24) %>%
# filter(msleep24, sleep_total_24 < 0.3) %>%
# arrange(desc(msleep24))
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
msleep24 <- select(msleep, name, vore, sleep_total_24)
mutate(sleep_total_24 = sleep_total/24, na.rm = T)
mutate(msleep, sleep_total_24 = sleep_total/24, na.rm = T)
msleep24 <- select(msleep, name, vore, sleep_total_24)
msleep %>%
mutate(msleep, sleep_total_24 = sleep_total/24, na.rm = T)
msleep24 <- select(msleep, name, vore, sleep_total_24)
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T)
msleep24 <- select(msleep, name, vore, sleep_total_24)
# filter(msleep24, sleep_total_24 < 0.3) %>%
# arrange(desc(msleep24))
rlang::last_error()
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T)
msleep24 <- select(msleep, name, vore, sleep_total_24)
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(msleep, name, vore, sleep_total_24)
sleep_total
class(msleep$sleep_total)
msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(msleep, name, vore, sleep_total_24)
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(name, vore, sleep_total_24)
# filter(msleep24, sleep_total_24 < 0.3) %>%
# arrange(desc(msleep24))
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
msleep24 <- select(name, vore, sleep_total_24)
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T)
msleep24 <- select(name, vore, sleep_total_24)
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T)
msleep24 <- select(msleep, name, vore, sleep_total_24)
mutate(sleep_total_24 = sleep_total/24, na.rm = T)
mutate(msleep, sleep_total_24 = sleep_total/24, na.rm = T)
msleep24 <- select(msleep, name, vore, sleep_total_24)
mutate(msleep, sleep_total_24 = sleep_total/24, na.rm = T)
msleep24 <- select(msleep, name, vore, sleep_total_24)
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(name, vore, sleep_total_24)
filter(msleep24, sleep_total_24 < 0.3) %>%
arrange(desc(msleep24))
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(name, vore, sleep_total_24)
filter(sleep_total_24 < 0.3) %>%
#arrange(desc(msleep24))
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(name, vore, sleep_total_24)
filter(sleep_total_24 < 0.3)
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(name, vore, sleep_total_24) %>%
filter(sleep_total_24 < 0.3)
#arrange(desc(msleep24))
msleep24 <- select(msleep, name, vore, mutate(sleep_total_24 = sleep_total/24, na.rm = T))
msleep24 <- select(msleep, name, vore, mutate(msleep$sleep_total_24 = msleep$sleep_total/24, na.rm = T))
msleep24 <- select(msleep, name, vore, mutate(msleep$sleep_total_24 = msleep$sleep_total/24))
msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(name, vore, sleep_total_24)
#filter(sleep_total_24 < 0.3)
#arrange(desc(msleep24))
msleep
names(msleep)
msleep24 <- select(msleep, name, vore)
names(msleep)
msleep <- mutate(sleep_total_24 = sleep_total/24, na.rm = T)
msleep <- mutate(msleep$sleep_total_24 = sleep_total/24, na.rm = T)
msleep <- mutate(msleep$sleep_total_24 = msleep$sleep_total/24, na.rm = T)
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(name, vore, sleep_total_24)
filter(sleep_total_24 < 0.3)
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(name, vore, sleep_total_24) %>%
filter(sleep_total_24 < 0.3) %>%
arrange(desc(msleep24))
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(name, vore, sleep_total_24) %>%
filter(sleep_total_24 < 0.3) %>%
arrange(desc(msleep))
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(name, vore, sleep_total_24) %>%
filter(sleep_total_24 < 0.3)
#arrange(desc(msleep))
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(name, vore, sleep_total_24) %>%
filter(sleep_total_24 < 0.3) %>%
arrange(desc(msleep))
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24, na.rm = T) %>%
select(name, vore, sleep_total_24) %>%
filter(sleep_total_24 < 0.3) %>%
arrange(desc(msleep24))
msleep24
summary(msleep24)
skim(msleep24)
hist(msleep24)
hist(msleep24$sleep_total_24)
tabyl(msleep24)
?tabyl()
tabyl(msleep24$sleep_total_24)
tabyl(msleep)
names(msleep)
msleep24 %>%
tabyl(vore)
msleep24 %>%
tabyl(vore, order)
msleep24 %>%
tabyl(vore)
msleep24 %>%
tabyl(order)
msleep24 %>%
tabyl(vore)
msleep %>%
tabyl(vore, order)
summarize(msleep$sleep_total)
summarize(msleep)
summarize(msleep$sleep_total)
head(msleep)
msleep %>%
summarize(sleep_total)
head(msleep)
msleep %>%
summarize(mean(sleep_total))
head(msleep)
msleep %>%
summarize(sleep_total, bodywt)
large <-
msleep %>%
select(name, genus, bodywt, sleep_total) %>%
filter(bodywt > 200) %>%
arrange(desc(bodywt))
large
mean(large$sleep_total)
msleep %>%
filter(bodywt > 200) %>%
summarize(mean_sleep_lg = mean(sleep_total))
msleep %>%
filter(bodywt > 200) %>%
summarize(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
total = n())
msleep %>%
filter(bodywt > 100) %>%
summarise(n_genera=n_distinct(genus))
?msleep
names(msleep)
msleep %>%
group_by(vore) %>% #we are grouping by feeding ecology
summarize(min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
mean_bodywt = mean(bodywt),
total=n())
library("tidyverse")
library("janitor")
library("skimr")
library("palmerpenguins")
glimpse(penguins)
penguins %>%
group_by(island) %>%
summarize(mean_body_mass_g=mean(body_mass_g),
n=n())
penguins %>%
group_by(island) %>%
summarize(number_NAs=sum(is.na(body_mass_g)))
penguins %>%
filter(!is.na(body_mass_g)) %>%
group_by(island) %>%
summarize(mean_body_mass_g=mean(body_mass_g),
sd_body_mass_g=sd(body_mass_g),
n=n())
?sd()
penguins %>%
group_by(island, species) %>%
summarize(n=n(), .groups= 'keep')#the .groups argument here just prevents a warning message
penguins %>%
count(island, sort = T) #sort=T sorts the column in descending order
penguins %>%
group_by(island) %>%
summarize(n=n())
penguins %>%
count(island, species, sort = F)
penguins %>%
tabyl(species, island)
penguins %>%
tabyl(species, island) %>%
adorn_percentages() %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns()
/adorn_percentages()
?adorn_percentages()
?adorn_pct_formatting()
?adorn_ns()
penguins %>%
tabyl(species, island) %>%
adorn_percentages() %>%
adorn_pct_formatting(digits = 1)
#adorn_ns()
penguins %>%
tabyl(species, island) %>%
adorn_percentages() %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns()
penguins %>%
tabyl(species, island) %>%
adorn_percentages() %>%
#adorn_pct_formatting(digits = 1) %>%
adorn_ns()
penguins %>%
tabyl(species, island) %>%
adorn_percentages() %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns()
?adorn_pct_formatting()
?adorn_percentages()
names(penguins)
names(penguins)
penguins %>%
filter(species == "Adelie")
summarize(mean_bill = mean(bill_length_mm), mean_depth = mean(bill_depth_mm), mean_flipper = mean(flipper_length_mm), mean_body_mass = mean(body_mass_g))
names(penguins)
penguins %>%
filter(species == "Adelie") %>%
summarize(mean_bill = mean(bill_length_mm), mean_depth = mean(bill_depth_mm), mean_flipper = mean(flipper_length_mm), mean_body_mass = mean(body_mass_g))
filter(penguins, species == "Adelie")
names(penguins)
penguins %>%
filter(species == "Adelie") %>%
summarize(mean_bill = mean(bill_length_mm), mean_depth = mean(bill_depth_mm), mean_flipper = mean(flipper_length_mm), mean_body_mass = mean(body_mass_g))
names(penguins)
penguins %>%
summarize(mean_bill = mean(bill_length_mm), mean_depth = mean(bill_depth_mm), mean_flipper = mean(flipper_length_mm), mean_body_mass = mean(body_mass_g)) %>%
filter(species == "Adelie")
names(penguins)
penguins %>%
summarize(mean_bill = mean(bill_length_mm, na.rm=T), mean_depth = mean(bill_depth_mm, na.rm=T), mean_flipper = mean(flipper_length_mm, na.rm=T), mean_body_mass = mean(body_mass_g)) %>%
names(penguins)
penguins %>%
filter(species == "Adelie") %>%
summarize(mean_bill = mean(bill_length_mm, na.rm=T), mean_depth = mean(bill_depth_mm, na.rm=T), mean_flipper = mean(flipper_length_mm, na.rm=T), mean_body_mass = mean(body_mass_g, na.rm=T))
penguins %>%
group_by(species) %>%
summarize(mean_bill = mean(bill_length_mm, na.rm=T))
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/enmia/OneDrive/Desktop/RStudio/STA 108 HW")
#2.23 Part c
#H0: B1 = 0
#HA: B1 =/= 0
anova(gpa_reg)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/enmia/OneDrive/Desktop/RStudio/STA 108 HW")
#2.4, Part a
gpa_data = read.table(file = "HW 1 1.9.txt", header=F, col.names=c('gpa', 'act'))
attach(gpa_data)
gpa_reg <- lm(gpa ~ act)
summary(gpa_reg)
confint(gpa_reg, level=.99)
#2.4 Part b
#H0: There exists a linear correlation between GPA and ACT Score
#HA: There does not exist a linear correlation between GPA and ACT Score
summary(gpa_reg)
#From summary, t* for act (b1) is 3.040. From t table on page 1336 of textbook, t value is 2.617. As t* > t, we reject our null hypothesis in favor of the alternative. We conclude that there does not exist a linear association between GPA and ACT score.
#2.4 Part c
summary(gpa_reg)
#The p value is 0.00292. At an alpha of 0.01, p value < alpha, further supporting rejection of the null hypothesis.
#2.13 Part a
new_score = data.frame(act=28)
predict(gpa_reg, new_score, interval="confidence", se.fit=T)
#We are 95% confident that the true mean GPA for freshmen who have an ACT score of 28 is between 3.061384 and 3.341033.
#2.13 Part b
predict(score_28_reg, newdata, interval = "prediction", se.fit=T)
#2.23 Part c
#H0: B1 = 0
#HA: B1 =/= 0
anova(gpa_reg)
qf(0.99, 1, 118) #This is our F statistic
#Since F* > F, we reject our null hypothesis for the alternative and conclude that B1 =/= 0.
summary(gpa_reg)
summary(gpa_reg)
r <- sqrt(0.07262)
summary(gpa_reg)
r <- sqrt(0.07262)
r
summary(gpa_reg)
r <- sqrt(0.07262)
r
plot(act, gpa)
abline(gpa_reg, col = "red")
Yhat
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/enmia/OneDrive/Desktop/RStudio/STA 108 HW")
gpa_data = read.table(file = "HW 1 1.9.txt", header=F, col.names=c('gpa', 'act'))
attach(gpa_data)
gpa_reg <- lm(gpa ~ act)
summary(gpa_reg)
confint(gpa_reg, level=.99)
summary(gpa_reg)
summary(gpa_reg)
new_score = data.frame(act=28)
predict(gpa_reg, new_score, interval="confidence", se.fit=T)
predict(gpa_reg, new_score, interval = "prediction", se.fit=T)
Yhat
new_score = data.frame(act=28)
W = sqrt(2*qf(0.95, 1, 118))
Yhat = predict(gpa_reg, new_score, se.fit = T)
Yhat
#fit = 3.201209 , se.fit = 0.07060873
upper_lim = 3.201209 + W * 0.07060873
lower_lim = 3.201209 - W * 0.07060873
upper_lim
lower_lim
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/enmia/OneDrive/Desktop/RStudio/STA 108 HW")
gpa_data = read.table(file = "HW 1 1.9.txt", header=F, col.names=c('gpa', 'act'))
attach(gpa_data)
gpa_reg <- lm(gpa ~ act)
summary(gpa_reg)
confint(gpa_reg, level=.99)
summary(gpa_reg)
summary(gpa_reg)
new_score = data.frame(act=28)
predict(gpa_reg, new_score, interval="confidence", se.fit=T)
predict(gpa_reg, new_score, interval = "prediction", se.fit=T)
new_score = data.frame(act=28)
W = sqrt(2*qf(0.95, 1, 118))
Yhat = predict(gpa_reg, new_score, se.fit = T)
Yhat
#fit = 3.201209 , se.fit = 0.07060873
upper_lim = 3.201209 + W * 0.07060873
lower_lim = 3.201209 - W * 0.07060873
upper_lim
lower_lim
anova(gpa_reg)
anova(gpa_reg)
qf(0.99, 1, 118) #This is our F statistic
summary(gpa_reg)
r <- sqrt(0.07262)
r
plot(act, gpa)
abline(gpa_reg, col = "red")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/enmia/OneDrive/Desktop/RStudio/STA 108 HW")
gpa_data = read.table(file = "HW 1 1.9.txt", header=F, col.names=c('gpa', 'act'))
attach(gpa_data)
gpa_reg <- lm(gpa ~ act)
summary(gpa_reg)
confint(gpa_reg, level=.99)
summary(gpa_reg)
summary(gpa_reg)
new_score = data.frame(act=28)
predict(gpa_reg, new_score, interval="confidence", se.fit=T)
predict(gpa_reg, new_score, interval = "prediction", se.fit=T)
new_score = data.frame(act=28)
W = sqrt(2*qf(0.95, 1, 118))
Yhat = predict(gpa_reg, new_score, se.fit = T)
Yhat
#fit = 3.201209 , se.fit = 0.07060873
upper_lim = 3.201209 + W * 0.07060873
lower_lim = 3.201209 - W * 0.07060873
upper_lim
lower_lim
anova(gpa_reg)
anova(gpa_reg)
qf(0.99, 1, 118) #This is our F statistic
summary(gpa_reg)
r <- sqrt(0.07262)
r
plot(act, gpa)
abline(gpa_reg, col = "red")
unlink('C:/Users/enmia/OneDrive/Desktop/RStudio/STA 108 HW/HW 2_cache', recursive = TRUE)
